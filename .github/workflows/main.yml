# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
        

      # Runs a single command using the runners shell
      - name: Download the toolchain
        run: |
          wget -q https://storage.googleapis.com/onyx-stuffs/x86_64-onyx.tar.zst
          zstd -d x86_64-onyx.tar.zst --stdout | tar x
          echo "$PWD/x86_64-onyx/bin" >> $GITHUB_PATH

      - name: dependencies
        run: |
          sudo apt-get update && sudo apt-get install mtools genisoimage libfl2 clang-tidy unzip ninja-build
          mkdir gn_bin/
          cd gn_bin
          wget -q https://chrome-infra-packages.appspot.com/dl/gn/gn/linux-amd64/+/latest -O gn.zip
          unzip gn.zip
          echo "$PWD" >> $GITHUB_PATH
          cd ..

      # Runs a set of commands using the runners shell
      - name: Build Onyx
        run: |
          cp kernel/kernel.config.example kernel/kernel.config
          SYSROOT=$PWD/sysroot ./scripts/setup_build.sh
          RUN_CLANG_TIDY=0 make -j $(nproc) iso

      - name: Upload a Build Artifact(Onyx.iso)
        uses: actions/upload-artifact@v2.1.4
        with:
          name: Onyx ISO
          path: Onyx.iso

      - name: Upload a Build Artifact(kernel/vmonyx)
        uses: actions/upload-artifact@v2.1.4
        with:
          name: vmonyx
          path: kernel/vmonyx

      - name: Upload a Build Artifact(sysroot)
        uses: actions/upload-artifact@v2.1.4
        with:
          name: Sysroot
          path: sysroot/

  build-toolchain:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Cache
        id: toolchain-cache
        uses: actions/cache@v2.1.4
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: toolchain_binaries/
          # An explicit key for restoring and saving the cache
          key: toolchain-linux
      
      - name: Install Dependencies
        if: steps.toolchain-cache.outputs.cache-hit != 'true'
        run: |
          mkdir toolchain_binaries
          ./toolchain/download_and_patch_tools.sh toolchain_build
          cd toolchain_build
          mkdir binutils-build
          cd binutils-build
          ../binutils-2.35/configure --target=x86_64-onyx --prefix=$PWD/../../toolchain_binaries \
          --with-sysroot=$PWD/../../sysroot \
          --disable-werror --disable-nls --enable-gold=default --enable-lto --enable-plugins
           make -j $(nproc)
           make install -j $(nproc)
           cd ..
           mkdir gcc-build
           cd gcc-build
           ../gcc-10.2.0/configure --target=x86_64-onyx --prefix=$PWD/../../toolchain_binaries \
           --with-sysroot=$PWD/../../sysroot --enable-languages=c,c++ --disable-nls \
           --enable-threads=posix --enable-libstdcxx-threads --enable-symvers=gnu --enable-default-pie \
           --enable-lto --enable-default-ssp --enable-shared
            make all-gcc all-target-libgcc all-target-libstdc++-v3 -j $(nproc)
            make install-gcc install-target-libgcc install-target-libstdc++-v3 -j $(nproc)

            
            
